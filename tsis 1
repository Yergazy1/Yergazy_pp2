x = int(1)   # x will be 1
y = int(2.8) # y will be 2
z = int("3") # z will be 3

x = float(1)     # x will be 1.0
y = float(2.8)   # y will be 2.8
z = float("3")   # z will be 3.0
w = float("4.2") # w will be 4.2

x = str("s1") # x will be 's1'
y = str(2)    # y will be '2'
z = str(3.0)  # z will be '3.0'

#Simple comment
#This is a comment
#written in
#more than just one line
"""
This is a comment
written in
more than just one line     
"""
print("Hello, World!")

x = "Hello World"  #str  
x = 20  #int  
x = 20.5  #float  
x = 1j  #complex  
x = ["apple", "banana", "cherry"]  #list  
x = ("apple", "banana", "cherry")  #tuple  
x = range(6)  #range  
x = {"name" : "John", "age" : 36}  #dict  
x = {"apple", "banana", "cherry"}  #set  
x = frozenset({"apple", "banana", "cherry"})  #frozenset  
x = True  #bool  
x = b"Hello"  #bytes  
x = bytearray(5)  #bytearray  
x = memoryview(bytes(5))  #memoryview  
x = None


x = str("Hello World")  #str  
x = int(20)  #int  
x = float(20.5)  #float  
x = complex(1j)  #complex  
x = list(("apple", "banana", "cherry"))  #list  
x = tuple(("apple", "banana", "cherry"))  #tuple  
x = range(6)  #range  
x = dict(name="John", age=36)  #dict  
x = set(("apple", "banana", "cherry"))  #set  
x = frozenset(("apple", "banana", "cherry"))  #frozenset  
x = bool(5)  #bool  
x = bytes(5)  #bytes  
x = bytearray(5)  #bytearray  
x = memoryview(bytes(5))  #memoryview


print("Hello World")

x = 1    # int
y = 2.8  # float
z = 1j   # complex

print(type(x))
print(type(y))
print(type(z))

#int
x = 1
y = 35656222554887711
z = -3255522
#float
x = 1.10
y = 1.0
z = -35.59
#Also float
x = 35e3
y = 12E4
z = -87.7e100

x = 1    # int
y = 2.8  # float
z = 1j   # complex

#convert from int to float:
a = float(x)

#convert from float to int:
b = int(y)

#convert from int to complex:
c = complex(x)

print(a)
print(b)
print(c)

print(type(a))
print(type(b))
print(type(c))

import random

print(random.randrange(1, 10))

'''
age = 36
txt = "My name is John, I am " + age  | WRONG
print(txt)
'''

quantity = 3
itemno = 567
price = 49.95
myorder = "I want {} pieces of item {} for {} dollars."
print(myorder.format(quantity, itemno, price))

quantity = 3
itemno = 567
price = 49.95
myorder = "I want to pay {2} dollars for {0} pieces of item {1}."
print(myorder.format(quantity, itemno, price))

a = "Hello"
b = "World"
c = a + b
print(c)
c = a + " " + b
print(c)


b = "Hello, World!"
print(b[2:5])
print(b[:5])
print(b[2:])
print(b[-5:-2])


#txt = "We are the so-called "Vikings" from the north." WRONG
txt = "We are the so-called \"Vikings\" from the north."

a = "Hello, World!"
print(a.upper())
print(a.lower())
print(a.strip())
print(a.replace("H", "J"))
print(a.split(","))


print("Hello")
print('Hello')

a = "Hello"
print(a)

a = """Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."""
print(a)

a = '''Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua.'''
print(a)

a = "Hello, World!"
print(a[1])

for x in "banana":
  print(x)

a = "Hello, World!"
print(len(a))

txt = "The best things in life are free!"
print("free" in txt)

txt = "The best things in life are free!"
if "free" in txt:
  print("Yes, 'free' is present.")

txt = "The best things in life are free!"
print("expensive" not in txt)

txt = "The best things in life are free!"
if "expensive" not in txt:
  print("No, 'expensive' is NOT present.") 


#myComment
x = 5
y = "Five is greater than two!"
if x > 2:
    print(y)


x = 5
y = "John"
print(x)
print(y)
x = "Sally" # x is now of type str
print(x)
x = 5
y = "John"
print(type(x))
print(type(y))



  x, y, z = "Orange", "Banana", "Cherry"
print(x)
print(y)
print(z)

x = y = z = "Orange"
print(x)
print(y)
print(z)

fruits = ["apple", "banana", "cherry"]
x, y, z = fruits
print(x)
print(y)
print(z)



x = "awesome"

def myfunc():
  #global x | If you use the global keyword, the variable belongs to the global scope
  x = "fantastic"
  print("Python is " + x)

myfunc()

print("Python is " + x) # if global output: fantastic
